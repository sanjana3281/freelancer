# Generated by Django 5.2.6 on 2025-10-03 01:48
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("myapp", "0005_ensure_application_columns"),   # keep your previous dependency
        # If you don't have 0005_ensure_application_columns, change this to your last migration file
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                # --- ADD missing columns (safe if they already exist) ---
                migrations.RunSQL(
                    'ALTER TABLE "myapp_application" '
                    'ADD COLUMN IF NOT EXISTS "resume" varchar(255);'
                ),
                migrations.RunSQL(
                    'ALTER TABLE "myapp_application" '
                    'ADD COLUMN IF NOT EXISTS "portfolio_url" varchar(200);'
                ),
                migrations.RunSQL(
                    'ALTER TABLE "myapp_application" '
                    'ADD COLUMN IF NOT EXISTS "expected_salary" numeric(10,2);'
                ),
                migrations.RunSQL(
                    'ALTER TABLE "myapp_application" '
                    'ADD COLUMN IF NOT EXISTS "availability_date" date;'
                ),

                # --- DROP legacy columns only if present ---
                migrations.RunSQL(
                    'ALTER TABLE "myapp_application" '
                    'DROP COLUMN IF EXISTS "status";'
                ),
                migrations.RunSQL(
                    'ALTER TABLE "myapp_application" '
                    'DROP COLUMN IF EXISTS "submitted_at";'
                ),
                migrations.RunSQL(
                    'ALTER TABLE "myapp_application" '
                    'DROP COLUMN IF EXISTS "updated_at";'
                ),
            ],
            state_operations=[
                # Model options
                migrations.AlterModelOptions(
                    name="application",
                    options={"ordering": ["-created_at"]},
                ),

                # Remove unique_together in STATE ONLY
                migrations.AlterUniqueTogether(
                    name="application",
                    unique_together=set(),
                ),

                # Make sure Djangoâ€™s model state knows the current field type
                migrations.AlterField(
                    model_name="application",
                    name="portfolio_url",
                    field=models.URLField(blank=True, null=True),
                ),

                # Remove legacy fields from the state
                migrations.RemoveField(
                    model_name="application",
                    name="status",
                ),
                migrations.RemoveField(
                    model_name="application",
                    name="submitted_at",
                ),
                migrations.RemoveField(
                    model_name="application",
                    name="updated_at",
                ),
            ],
        ),
    ]

